{"version":3,"sources":["components/SearchBox/SearchBox.js","components/WeatherIcon/WeatherIcon.js","components/WatherBox/WeatherBoxTemp/WeatherBoxTemp.js","components/WatherBox/WeatherBoxLocation/WeatherBoxLocation.js","components/WatherBox/WeatherBoxDescription/WeatherBoxDescription.js","components/BoxOtherData/BoxOtherData.js","components/CurrentTime/CurrentTime.js","components/WatherBox/WeatherBox.js","components/Forecast/ForecastData/ForecastData.js","components/Forecast/Forecast.js","components/Loader/Loader.js","containers/App.js","serviceWorker.js","index.js"],"names":["searchBox","props","Col","className","xs","md","id","isLoading","loaded","labelKey","minLength","onChange","changed","onSearch","searched","options","placeholder","renderMenuItemChildren","option","Fragment","name","country","weatherIcon","weatherType","type","suffix","weatherBoxTemp","rootClass","temp","unit","feels","weatherBoxLocation","city","weatherBoxDescription","description","boxOtherData","data","icon","title","currentTime","state","moment","format","currentDate","this","intervalID","setInterval","tick","clearInterval","setState","React","Component","weatherBox","convertedRainData","dataTime","weatherCurrentData","dt","utcOffset","rainData","rain","numberFormat","number","Math","round","tempMinMax","weatherDailyData","min","max","Object","keys","dayOrNight","Button","variant","onClick","clicked","WeatherIcon","weather","WeatherBoxTemp","feels_like","CurrentTime","WeatherBoxLocation","WeatherBoxDescription","Row","BoxOtherData","wind_speed","pressure","humidity","uvi","visibility","random","forecastData","day","dayName","forecast","map","value","index","ForecastData","loader","App","lat","lng","units","lang","isLoadedCurrent","isSearchLoading","selected","error","handleCityChange","item","length","getWeather","handleSearch","query","result","cities","filter","toLowerCase","indexOf","undefined","items","handleForceUpdate","forceUpdate","URL2","process","axios","get","weatherAllData","daily","current","console","log","boxContent","Loader","valueOf","sunset","sunrise","lg","WeatherBox","Forecast","Container","SearchBox","e","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e302c995.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaSearchLocation } from 'react-icons/fa'\r\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\r\nimport { Col } from 'react-bootstrap';\r\n\r\nconst searchBox = props => {\r\n\r\n\treturn (\r\n\t\t<Col className=\"searchBox\" xs={12} md={6}>\r\n\t\t\t<AsyncTypeahead\r\n\t\t\t\tid=\"async-example\"\r\n\t\t\t\tisLoading={props.loaded}\r\n\t\t\t\tlabelKey=\"name\"\r\n\t\t\t\tminLength={3}\r\n\t\t\t\tonChange={props.changed}\r\n\t\t\t\tonSearch={props.searched}\r\n\t\t\t\toptions={props.options}\r\n\t\t\t\tplaceholder=\"Enter city name...\"\r\n\t\t\t\trenderMenuItemChildren={(option) => (\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{option.name}\r\n\t\t\t\t\t\t\t<small>: {option.country}</small>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t<div className=\"searchBox__icon\"><FaSearchLocation /></div>\r\n\t\t</Col>\r\n\t)\r\n}\r\n\r\nexport default searchBox;","import React from 'react';\r\nimport * as WeatherIcons from \"react-icons/wi\";\r\n\r\nconst weatherIcon = props => {\r\n\tlet weatherType = <WeatherIcons.WiNa/>;\r\n\r\n\tif (props.type) weatherType = <i className={`owf owf-3x owf-${props.type}-${props.suffix}`} />;\r\n\r\n\treturn <div className=\"weatherIcon\">{weatherType}</div>;\r\n}\r\n\r\nexport default weatherIcon;","import React from 'react';\r\n\r\nconst weatherBoxTemp = props => {\r\n\treturn (\r\n\t\t<div className={`${props.rootClass}__temp`}>\r\n\t\t\t{props.temp}\r\n\t\t\t<span className={`${props.rootClass}__temp__unit`}>{props.unit}</span>\r\n\t\t\t<p className={`${props.rootClass}__temp__feels`}>\r\n\t\t\t\tFeels Like: {props.feels}\r\n\t\t\t\t<span className={`${props.rootClass}__temp__feels__unit`}>{props.unit}</span>\r\n\t\t\t</p>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default weatherBoxTemp;","import React from 'react';\r\n\r\nconst weatherBoxLocation = props => {\r\n\treturn (\r\n\t\t<div className={`${props.rootClass}__location`}>\r\n\t\t\t<span>{props.city}</span>\r\n\t\t\t<span>{props.country}</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default weatherBoxLocation;","import React from 'react';\r\n\r\nconst weatherBoxDescription = props => {\r\n\treturn (\r\n\t\t<div className={`${props.rootClass}__description`}>\r\n\t\t\t{props.description}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default weatherBoxDescription;","import React from 'react';\r\n\r\nconst boxOtherData = props => {\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className={`${props.rootClass}__type`}>\r\n\t\t\t\t{props.data}\r\n\t\t\t\t<span className={`${props.rootClass}__type__unit`}>{props.unit}</span>\r\n\t\t\t</div>\r\n\t\t\t<div className={`${props.rootClass}__icon`}>{props.icon}</div>\r\n\t\t\t<h3 className={`${props.rootClass}__title`}>{props.title}</h3>\r\n\t\t</React.Fragment>\r\n\t);\r\n}\r\n\r\nexport default boxOtherData;","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nclass currentTime extends React.Component {\r\n\tstate = {\r\n\t\tcurrentTime: moment().format('HH:mm:ss'),\r\n\t\tcurrentDate: moment().format('DD.MM.YYYY')\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.intervalID = setInterval(\r\n\t\t\t() => this.tick(),\r\n\t\t\t1000\r\n\t\t);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.intervalID);\r\n\t}\r\n\r\n\ttick() {\r\n\t\tthis.setState({\r\n\t\t\tcurrentTime: moment().format('HH:mm:ss'),\r\n\t\t\tcurrentDate: moment().format('DD.MM.YYYY')\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className={`${this.props.rootClass}__times`}>\r\n\t\t\t\t<p className={`${this.props.rootClass}__times__time`}>{this.state.currentTime}</p>\r\n\t\t\t\t<p className={`${this.props.rootClass}__times__date`}>{this.state.currentDate}</p>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default currentTime","import React from 'react';\r\nimport WeatherIcon from '../WeatherIcon/WeatherIcon';\r\nimport WeatherBoxTemp from './WeatherBoxTemp/WeatherBoxTemp';\r\nimport WeatherBoxLocation from './WeatherBoxLocation/WeatherBoxLocation';\r\nimport WeatherBoxDescription from './WeatherBoxDescription/WeatherBoxDescription';\r\nimport BoxOtherData from '../BoxOtherData/BoxOtherData';\r\nimport CurrentTime from '../CurrentTime/CurrentTime';\r\nimport { Col, Row, Button } from 'react-bootstrap';\r\nimport { AiOutlineReload, AiOutlineEye } from 'react-icons/ai';\r\nimport { MdUpdate } from 'react-icons/md';\r\nimport * as WeatherIcons from 'react-icons/wi';\r\nimport moment from \"moment\";\r\n\r\nconst weatherBox = props => {\r\n\tlet convertedRainData = '0';\r\n\tconst dataTime =  moment(props.weatherCurrentData.dt, \"X\").utcOffset(1).format('HH:mm:ss');\r\n\tconst rainData = props.weatherCurrentData.rain;\r\n\tconst numberFormat = (number) => Math.round(number * 10) / 10;\r\n\r\n\tconst tempMinMax = (\r\n\t\t<React.Fragment>\r\n\t\t\t<span>{numberFormat(props.weatherDailyData[0].temp.min)}</span>\r\n\t\t\t<span>°C</span>\r\n\t\t\t<span>{numberFormat(props.weatherDailyData[0].temp.max)}</span>\r\n\t\t\t<span>°C</span>\r\n\t\t</React.Fragment>\r\n\t);\r\n\r\n\tif (rainData > 0) convertedRainData = rainData[Object.keys(rainData)[0]];\r\n\r\n\treturn (\r\n\t\t<div className={`weatherBox${props.dayOrNight}`}>\r\n\t\t\t<Button variant=\"link\" className=\"weatherBox__reloadButton\" onClick={props.clicked}><AiOutlineReload /></Button>\r\n\t\t\t<div className=\"weatherBox__mainContent\">\r\n\t\t\t\t<WeatherIcon\r\n\t\t\t\t\ttype={props.weatherCurrentData.weather[0].id}\r\n\t\t\t\t\tsuffix={props.suffix} />\r\n\t\t\t\t<WeatherBoxTemp\r\n\t\t\t\t\trootClass=\"weatherBox__mainContent\"\r\n\t\t\t\t    temp={numberFormat(props.weatherCurrentData.temp)}\r\n\t\t\t\t    feels={numberFormat(props.weatherCurrentData.feels_like)} unit=\"°C\" />\r\n\t\t\t\t<CurrentTime rootClass=\"weatherBox__mainContent\" />\r\n\t\t\t\t<WeatherBoxLocation\r\n\t\t\t\t\trootClass=\"weatherBox__mainContent\"\r\n\t\t\t\t\tcity={props.city}\r\n\t\t\t\t\tcountry={props.country}\r\n\t\t\t\t/>\r\n\t\t\t\t<WeatherBoxDescription\r\n\t\t\t\t\trootClass=\"weatherBox__mainContent\"\r\n\t\t\t\t\tdescription={props.weatherCurrentData.weather[0].description} />\r\n\t\t\t</div>\r\n\t\t\t<Row className=\"weatherBox__otherData\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"weatherBox__otherData\"\r\n\t\t\t\t\t\tdata={props.weatherCurrentData.wind_speed}\r\n\t\t\t\t\t\tunit=\"m/s\"\r\n\t\t\t\t\t\ttitle=\"Wind Flow\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiCloudyWindy />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"weatherBox__otherData\"\r\n\t\t\t\t\t\tdata={props.weatherCurrentData.pressure}\r\n\t\t\t\t\t\tunit=\"hPa\"\r\n\t\t\t\t\t\ttitle=\"Air Pressure\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiBarometer />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"weatherBox__otherData\"\r\n\t\t\t\t\t\tdata={props.weatherCurrentData.humidity}\r\n\t\t\t\t\t\tunit=\"%\"\r\n\t\t\t\t\t\ttitle=\"Humidity\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiHumidity />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"weatherBox__otherData\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"temp weatherBox__otherData\"\r\n\t\t\t\t\t\tdata={tempMinMax}\r\n\t\t\t\t\t\tunit=\"\"\r\n\t\t\t\t\t\ttitle=\"Temp\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiThermometer />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"weatherBox__otherData\"\r\n\t\t\t\t\t\tdata={props.weatherCurrentData.uvi}\r\n\t\t\t\t\t\tunit=\"\"\r\n\t\t\t\t\t\ttitle=\"UV-index\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiSunrise />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<Row className=\"weatherBox__otherData\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"weatherBox__otherData\"\r\n\t\t\t\t\t\tdata={props.weatherCurrentData.visibility}\r\n\t\t\t\t\t\tunit=\"m\"\r\n\t\t\t\t\t\ttitle=\"Visibility\"\r\n\t\t\t\t\t\ticon={<AiOutlineEye />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"weatherBox__otherData\"\r\n\t\t\t\t\t\tdata={dataTime}\r\n\t\t\t\t\t\tunit=\"\"\r\n\t\t\t\t\t\ttitle=\"Data\"\r\n\t\t\t\t\t\ticon={<MdUpdate />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"weatherBox__otherData\"\r\n\t\t\t\t\t\tdata={convertedRainData}\r\n\t\t\t\t\t\tunit=\"mm/h\"\r\n\t\t\t\t\t\ttitle=\"Rain\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiRain />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<div className=\"random\">{ Math.random() }</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default weatherBox;","import React from 'react';\r\nimport WeatherIcon from '../../WeatherIcon/WeatherIcon';\r\nimport moment from \"moment\";\r\nimport * as WeatherIcons from \"react-icons/wi\";\r\nimport BoxOtherData from \"../../BoxOtherData/BoxOtherData\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\n\r\nconst forecastData = props => {\r\n\tconst numberFormat = (number) => Math.round(number * 10) / 10;\r\n\tconst day =  moment(props.forecastData.dt, \"X\").utcOffset(1).format('DD.MM.YYYY');\r\n\tconst dayName =  moment(props.forecastData.dt, \"X\").utcOffset(1).format('ddd');\r\n\r\n\tconst tempMinMax = (\r\n\t\t<div className=\"minmax\">\r\n\t\t\t<span>{numberFormat(props.forecastData.temp.min)}</span>\r\n\t\t\t<span>°C</span>\r\n\t\t\t<span>{numberFormat(props.forecastData.temp.max)}</span>\r\n\t\t\t<span>°C</span>\r\n\t\t</div>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"forecast__data\">\r\n\t\t\t<Row className=\"forecast__data__row\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<div className=\"forecast__data__date\">\r\n\t\t\t\t\t\t<h4>{dayName}</h4>\r\n\t\t\t\t\t\t<small>{day}</small>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<div className=\"forecast__data__weather\">\r\n\t\t\t\t\t<WeatherIcon\r\n\t\t\t\t\t\ttype={props.forecastData.weather[0].id}\r\n\t\t\t\t\t\tsuffix=\"d\" />\r\n\t\t\t\t\t\t<h3>{props.forecastData.weather[0].description}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"temp forecast__data\"\r\n\t\t\t\t\t\tdata={tempMinMax}\r\n\t\t\t\t\t\tunit=\"\"\r\n\t\t\t\t\t\ttitle=\"Temp\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiThermometer />}/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"forecast__data\"\r\n\t\t\t\t\t\tdata={props.forecastData.uvi}\r\n\t\t\t\t\t\tunit=\"\"\r\n\t\t\t\t\t\ttitle=\"UV-index\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiSunrise />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<BoxOtherData\r\n\t\t\t\t\t\trootClass=\"forecast__data\"\r\n\t\t\t\t\t\tdata={props.forecastData.humidity}\r\n\t\t\t\t\t\tunit=\"%\"\r\n\t\t\t\t\t\ttitle=\"Humidity\"\r\n\t\t\t\t\t\ticon={<WeatherIcons.WiHumidity />}/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default forecastData;","import React from 'react';\r\nimport ForecastData from './ForecastData/ForecastData'\r\n\r\n\r\nconst forecast = props => {\r\n\treturn (\r\n\t\t<div className={`forecast${props.dayOrNight}`}>\r\n\t\t\t<h2 className=\"forecast__title\">7 day weather forecast</h2>\r\n\t\t\t{\r\n\t\t\t\tprops.weatherDailyData.map((value, index) => {\r\n\t\t\t\t\tif(index > 0) {\r\n\t\t\t\t\t\treturn <ForecastData\r\n\t\t\t\t\t\t\tforecastData={value}\r\n\t\t\t\t\t\t\tkey={index}/>;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn '';\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default forecast;","import React from 'react';\n\nconst loader = props => {\n\treturn(\n\t\t<div className=\"loader\">\n\t\t\t<div className=\"loader__inner\">\n\t\t\t\t<span/>\n\t\t\t\t<span/>\n\t\t\t\t<span/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default loader;\n","import React from 'react';\nimport axios from 'axios';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport SearchBox from '../components/SearchBox/SearchBox';\nimport WeatherBox from '../components/WatherBox/WeatherBox';\nimport Forecast from '../components/Forecast/Forecast';\nimport Loader from '../components/Loader/Loader';\nimport cities from 'cities.json';\nimport moment from 'moment';\nimport './App.scss';\n\nclass App extends React.Component {\n\n\tstate = {\n\t\tweatherDailyData: null,\n\t\tweatherCurrentData: null,\n\t\tcity: 'Budapest',\n\t\tcountry: 'HU',\n\t\tlat: 47.498,\n\t\tlng: 19.0399,\n\t\tunits: 'metric',\n\t\tlang: 'hu',\n\t\tisLoadedCurrent: false,\n\t\tisSearchLoading: false,\n\t\toptions: [],\n\t\tselected: [],\n\t\terror: false,\n\t}\n\n\thandleCityChange = (item) => {\n\t\tif(item.length > 0) {\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tcity: item[0].name,\n\t\t\t\tcountry: item[0].country,\n\t\t\t\tlat: item[0].lat,\n\t\t\t\tlng: item[0].lng\n\t\t\t});\n\n\t\t\tthis.getWeather(item[0].name, this.state.units, item[0].lat, item[0].lng);\n\t\t}\n\t}\n\n\thandleSearch = (query) => {\n\t\tthis.setState({isSearchLoading: true});\n\t\tconst result = cities.filter(city => city.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n\n\t\tif(result !== undefined) {\n\t\t\tconst options = result.map((items) => ({\n\t\t\t\tname: items.name,\n\t\t\t\tcountry: items.country,\n\t\t\t\tlat: items.lat,\n\t\t\t\tlng: items.lng\n\t\t\t}));\n\t\t\tthis.setState({options: options});\n\t\t}\n\t\tthis.setState({isSearchLoading: false});\n\t}\n\n\thandleForceUpdate = () => {\n\t\tthis.forceUpdate();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getWeather(this.state.city, this.state.units, this.state.lat, this.state.lng);\n\t}\n\n\tasync getWeather(city, units, lat, lng) {\n\t\tconst URL2 = `${process.env.REACT_APP_WEATHER_API_URL}/onecall?lat=${lat}&lon=${lng}&units=${units}&exclude=hourly&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n\n\t\ttry {\n\t\t\tlet result = await axios.get(URL2);\n\t\t\tlet weatherAllData = result.data;\n\n\t\t\tthis.setState({\n\t\t\t\t...this.state,\n\t\t\t\tweatherDailyData: weatherAllData.daily,\n\t\t\t\tweatherCurrentData: weatherAllData.current,\n\t\t\t\tisLoadedCurrent: true\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log(`😱 Axios request failed: ${error}`);\n\t\t}\n\t}\n\n\trender() {\n\t\tlet boxContent = <Loader />;\n\t\tconst currentTime = moment().valueOf();\n\t\tlet dayOrNight = '',\n\t\t\tsuffix = 'd';\n\n\t\tif (this.state.isLoadedCurrent) {\n\t\t\tif(this.state.weatherCurrentData.sunset > currentTime && this.state.weatherCurrentData.sunrise < currentTime) {\n\t\t\t\tdayOrNight = ' nightMode';\n\t\t\t\tsuffix = 'n';\n\t\t\t}\n\n\t\t\tboxContent = (<React.Fragment>\n\t\t\t\t<Col className=\"main__content__col\" md={12} lg={6}>\n\t\t\t\t\t<WeatherBox\n\t\t\t\t\tsuffix={suffix}\n\t\t\t\t\tdayOrNight={dayOrNight}\n\t\t\t\t\tcity={this.state.city}\n\t\t\t\t\tcountry={this.state.country}\n\t\t\t\t\tweatherCurrentData={this.state.weatherCurrentData}\n\t\t\t\t\tweatherDailyData={this.state.weatherDailyData}\n\t\t\t\t\tclicked={this.handleForceUpdate} />\n\t\t\t\t</Col>\n\t\t\t\t<Col className=\"main__content__col\" md={12} lg={6}>\n\t\t\t\t\t<Forecast\n\t\t\t\t\t\tdayOrNight={dayOrNight}\n\t\t\t\t\t\tweatherCurrentData={this.state.weatherCurrentData}\n\t\t\t\t\t\tweatherDailyData={this.state.weatherDailyData}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t\t</React.Fragment>);\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Container className=\"main\">\n\t\t\t\t\t<SearchBox\n\t\t\t\t\t\t{...this.state}\n\t\t\t\t\t\tloaded={this.state.isSearchLoading}\n\t\t\t\t\t\tsearched={(e) => this.handleSearch(e)}\n\t\t\t\t\t\tchanged={(e) => this.handleCityChange(e)}\n\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t/>\n\t\t\t\t\t<Row className=\"main__content\">\n\t\t\t\t\t\t{boxContent}\n\t\t\t\t\t</Row>\n\t\t\t\t</Container>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}